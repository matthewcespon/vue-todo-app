/**
  * vee-validate v4.11.8
  * (c) 2023 Abdelrahman Awad
  * @license MIT
  */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("zod")):"function"==typeof define&&define.amd?define(["exports","zod"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).VeeValidateZod={},e.zod)}(this,(function(e,t){"use strict";const o=e=>null!==e&&!!e&&"object"==typeof e&&!Array.isArray(e);function r(e){if(!function(e){return"object"==typeof e&&null!==e}(e)||"[object Object]"!==function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Object.prototype.toString.call(e)}(e))return!1;if(null===Object.getPrototypeOf(e))return!0;let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function n(e,t){return Object.keys(t).forEach((o=>{if(r(t[o]))return e[o]||(e[o]={}),void n(e[o],t[o]);e[o]=t[o]})),e}function c(e,t){return{__type:"VVTypedSchema",async parse(o){const r=await e.safeParseAsync(o,t);if(r.success)return{value:r.data,errors:[]};const n={};return i(r.error.issues,n),{errors:Object.values(n)}},cast(t){try{return e.parse(t)}catch(r){const c=s(e);return o(c)&&o(t)?n(c,t):t}}}}function i(e,t){e.forEach((e=>{const o=function(e){const t=e.split(".");if(!t.length)return"";let o=String(t[0]);for(let e=1;e<t.length;e++)r=t[e],Number(r)>=0?o+=`[${t[e]}]`:o+=`.${t[e]}`;var r;return o}(e.path.join("."));("invalid_union"!==e.code||(i(e.unionErrors.flatMap((e=>e.issues)),t),o))&&(t[o]||(t[o]={errors:[],path:o}),t[o].errors.push(e.message))}))}function s(e){if(e instanceof t.ZodObject)return Object.fromEntries(Object.entries(e.shape).map((([e,o])=>o instanceof t.ZodDefault?[e,o._def.defaultValue()]:o instanceof t.ZodObject?[e,s(o)]:[e,void 0])))}const u=c,f=c;e.toFieldValidator=u,e.toFormValidator=f,e.toTypedSchema=c}));