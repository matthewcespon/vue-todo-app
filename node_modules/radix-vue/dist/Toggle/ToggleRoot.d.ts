import { type PrimitiveProps } from '../Primitive';
import { type ComputedRef, type InjectionKey, type Ref } from 'vue';
export interface ToggleProps extends PrimitiveProps {
    /**
     * The pressed state of the toggle when it is initially rendered. Use when you do not need to control its open state.
     */
    defaultValue?: boolean;
    /**
     * The controlled pressed state of the toggle.
     */
    pressed?: boolean;
    /**
     * Disables the trigger.
     */
    disabled?: boolean;
}
export type ToggleEmits = {
    'update:pressed': [value: boolean];
};
export declare const TOGGLE_INJECTION_KEY: InjectionKey<ToggleProvideValue>;
export interface ToggleProvideValue {
    modelValue?: Readonly<Ref<ToggleProps['pressed']>>;
    dataState: ComputedRef<DataState>;
}
export type DataState = 'on' | 'off';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    disabled: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    defaultValue: {
        type: import("vue").PropType<boolean>;
    };
    pressed: {
        type: import("vue").PropType<boolean>;
        default: undefined;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    'update:pressed': (value: boolean) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    defaultValue: {
        type: import("vue").PropType<boolean>;
    };
    pressed: {
        type: import("vue").PropType<boolean>;
        default: undefined;
    };
}>> & {
    "onUpdate:pressed"?: ((value: boolean) => any) | undefined;
}, {
    disabled: boolean;
    as: import('../Primitive').AsTag;
    pressed: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
