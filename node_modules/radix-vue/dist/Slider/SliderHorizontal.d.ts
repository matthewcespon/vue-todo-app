import type { Direction } from './utils';
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    dir: {
        type: import("vue").PropType<Direction>;
    };
    min: {
        type: import("vue").PropType<number>;
        required: true;
    };
    max: {
        type: import("vue").PropType<number>;
        required: true;
    };
    inverted: {
        type: import("vue").PropType<boolean>;
        required: true;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    slideEnd: () => void;
    slideStart: (value: number) => void;
    slideMove: (value: number) => void;
    homeKeyDown: (event: KeyboardEvent) => void;
    endKeyDown: (event: KeyboardEvent) => void;
    stepKeyDown: (event: KeyboardEvent, direction: number) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    dir: {
        type: import("vue").PropType<Direction>;
    };
    min: {
        type: import("vue").PropType<number>;
        required: true;
    };
    max: {
        type: import("vue").PropType<number>;
        required: true;
    };
    inverted: {
        type: import("vue").PropType<boolean>;
        required: true;
    };
}>> & {
    onSlideStart?: ((value: number) => any) | undefined;
    onSlideMove?: ((value: number) => any) | undefined;
    onSlideEnd?: (() => any) | undefined;
    onHomeKeyDown?: ((event: KeyboardEvent) => any) | undefined;
    onEndKeyDown?: ((event: KeyboardEvent) => any) | undefined;
    onStepKeyDown?: ((event: KeyboardEvent, direction: number) => any) | undefined;
}, {}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
