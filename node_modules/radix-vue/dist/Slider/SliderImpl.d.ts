import { type PrimitiveProps } from '../Primitive';
export type SliderImplEmits = {
    'slideStart': [event: PointerEvent];
    'slideMove': [event: PointerEvent];
    'slideEnd': [event: PointerEvent];
    'homeKeyDown': [event: KeyboardEvent];
    'endKeyDown': [event: KeyboardEvent];
    'stepKeyDown': [event: KeyboardEvent];
};
export interface SliderImplProps extends PrimitiveProps {
}
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    slideStart: (event: PointerEvent) => void;
    slideMove: (event: PointerEvent) => void;
    slideEnd: (event: PointerEvent) => void;
    homeKeyDown: (event: KeyboardEvent) => void;
    endKeyDown: (event: KeyboardEvent) => void;
    stepKeyDown: (event: KeyboardEvent) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
}>> & {
    onSlideStart?: ((event: PointerEvent) => any) | undefined;
    onSlideMove?: ((event: PointerEvent) => any) | undefined;
    onSlideEnd?: ((event: PointerEvent) => any) | undefined;
    onHomeKeyDown?: ((event: KeyboardEvent) => any) | undefined;
    onEndKeyDown?: ((event: KeyboardEvent) => any) | undefined;
    onStepKeyDown?: ((event: KeyboardEvent) => any) | undefined;
}, {
    as: import('../Primitive').AsTag;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
