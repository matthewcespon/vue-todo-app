import type { InjectionKey, Ref } from 'vue';
export interface MenubarMenuProps {
    value?: string;
}
export declare const MENUBAR_MENU_INJECTION_KEY: InjectionKey<MenubarMenuProvideValue>;
interface MenubarMenuProvideValue {
    value: string;
    triggerId: string;
    triggerElement: Ref<HTMLElement | undefined>;
    contentId: string;
    wasKeyboardTriggerOpenRef: Ref<boolean>;
}
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    value: {
        type: import("vue").PropType<string>;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    value: {
        type: import("vue").PropType<string>;
    };
}>>, {}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
