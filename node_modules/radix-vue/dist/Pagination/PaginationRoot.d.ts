import type { PrimitiveProps } from '../Primitive';
import { type InjectionKey, type Ref } from 'vue';
export interface PaginationRootProps extends PrimitiveProps {
    page?: number;
    defaultPage?: number;
    itemsPerPage?: number;
    total?: number;
    siblingCount?: number;
    disabled?: boolean;
    showEdges?: boolean;
}
export type PaginationRootEmits = {
    'update:page': [value: number];
};
interface PaginationRootContextValue {
    page: Ref<number>;
    onPageChange: (value: number) => void;
    pageCount: Ref<number>;
    siblingCount: Ref<number>;
    disabled: Ref<boolean>;
    showEdges: Ref<boolean>;
}
export declare const PAGINATION_CONTEXT_VALUE: InjectionKey<PaginationRootContextValue>;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    disabled: {
        type: import("vue").PropType<boolean>;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    page: {
        type: import("vue").PropType<number>;
    };
    defaultPage: {
        type: import("vue").PropType<number>;
        default: number;
    };
    itemsPerPage: {
        type: import("vue").PropType<number>;
        default: number;
    };
    total: {
        type: import("vue").PropType<number>;
        default: number;
    };
    siblingCount: {
        type: import("vue").PropType<number>;
        default: number;
    };
    showEdges: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    'update:page': (value: number) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: import("vue").PropType<boolean>;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    page: {
        type: import("vue").PropType<number>;
    };
    defaultPage: {
        type: import("vue").PropType<number>;
        default: number;
    };
    itemsPerPage: {
        type: import("vue").PropType<number>;
        default: number;
    };
    total: {
        type: import("vue").PropType<number>;
        default: number;
    };
    siblingCount: {
        type: import("vue").PropType<number>;
        default: number;
    };
    showEdges: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}>> & {
    "onUpdate:page"?: ((value: number) => any) | undefined;
}, {
    as: import('../Primitive').AsTag;
    defaultPage: number;
    itemsPerPage: number;
    total: number;
    siblingCount: number;
    showEdges: boolean;
}, {}>, {
    default?(_: {
        page: number;
    }): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
