import { type ToggleProps } from '../Toggle';
export interface ToggleGroupItemProps extends ToggleProps {
    /**
     * A string value for the toggle group item. All items within a toggle group should use a unique value.
     */
    value: string;
}
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    disabled: {
        type: import("vue").PropType<boolean>;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    value: {
        type: import("vue").PropType<string>;
        required: true;
    };
    defaultValue: {
        type: import("vue").PropType<boolean>;
    };
    pressed: {
        type: import("vue").PropType<boolean>;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: import("vue").PropType<boolean>;
    };
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    value: {
        type: import("vue").PropType<string>;
        required: true;
    };
    defaultValue: {
        type: import("vue").PropType<boolean>;
    };
    pressed: {
        type: import("vue").PropType<boolean>;
    };
}>>, {
    as: import('../Primitive').AsTag;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
