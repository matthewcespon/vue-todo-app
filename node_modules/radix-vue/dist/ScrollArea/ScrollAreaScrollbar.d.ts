import { type AsTag, type PrimitiveProps } from '../Primitive';
import { type InjectionKey, type Ref } from 'vue';
export interface ScrollAreaScrollbarProps extends PrimitiveProps {
    orientation?: 'vertical' | 'horizontal';
    forceMount?: boolean;
}
export interface ScrollAreaScollbarProvideValue {
    as: Ref<AsTag>;
    orientation: Ref<'vertical' | 'horizontal'>;
    forceMount?: Ref<boolean>;
    isHorizontal: Ref<boolean>;
    asChild: Ref<boolean>;
}
export declare const SCROLL_AREA_SCROLLBAR_INJECTION_KEY: InjectionKey<ScrollAreaScollbarProvideValue>;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<AsTag>;
        default: string;
    };
    forceMount: {
        type: import("vue").PropType<boolean>;
        default: undefined;
    };
    orientation: {
        type: import("vue").PropType<"vertical" | "horizontal">;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<AsTag>;
        default: string;
    };
    forceMount: {
        type: import("vue").PropType<boolean>;
        default: undefined;
    };
    orientation: {
        type: import("vue").PropType<"vertical" | "horizontal">;
        default: string;
    };
}>>, {
    as: AsTag;
    forceMount: boolean;
    orientation: "vertical" | "horizontal";
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
