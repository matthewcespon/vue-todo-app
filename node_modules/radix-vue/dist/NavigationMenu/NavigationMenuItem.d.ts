import { type InjectionKey, type Ref } from 'vue';
import { type PrimitiveProps } from '../Primitive';
export interface NavigationMenuItemProps extends PrimitiveProps {
    value?: string;
}
export interface NavigationMenuItemContextValue {
    value: string;
    contentId: string;
    triggerRef: Ref<HTMLElement | undefined>;
    focusProxyRef: Ref<HTMLElement | undefined>;
    wasEscapeCloseRef: Ref<boolean>;
    onEntryKeyDown(): void;
    onFocusProxyEnter(side: 'start' | 'end'): void;
    onContentFocusOutside(): void;
    onRootContentClose(): void;
}
export declare const NAVIGATION_MENU_ITEM_INJECTION_KEY: InjectionKey<NavigationMenuItemContextValue>;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    value: {
        type: import("vue").PropType<string>;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    value: {
        type: import("vue").PropType<string>;
    };
}>>, {
    as: import('../Primitive').AsTag;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
