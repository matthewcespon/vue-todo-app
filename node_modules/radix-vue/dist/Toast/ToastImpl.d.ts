import { type PrimitiveProps } from '../Primitive';
import type { InjectionKey } from 'vue';
import { type SwipeEvent } from './utils';
export interface ToastImplProps extends PrimitiveProps {
    type?: 'foreground' | 'background';
    open?: boolean;
    /**
     * Time in milliseconds that toast should remain visible for. Overrides value
     * given to `ToastProvider`.
     */
    duration?: number;
}
export type ToastImplEmits = {
    'close': [];
    'escapeKeyDown': [event: KeyboardEvent];
    'pause': [];
    'resume': [];
    'swipeStart': [event: SwipeEvent];
    'swipeMove': [event: SwipeEvent];
    'swipeCancel': [event: SwipeEvent];
    'swipeEnd': [event: SwipeEvent];
};
export declare const TOAST_INTERACTIVE_CONTEXT: InjectionKey<{
    onClose(): void;
}>;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    type: {
        type: import("vue").PropType<"background" | "foreground">;
    };
    open: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    duration: {
        type: import("vue").PropType<number>;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    close: () => void;
    escapeKeyDown: (event: KeyboardEvent) => void;
    pause: () => void;
    resume: () => void;
    swipeStart: (event: SwipeEvent) => void;
    swipeMove: (event: SwipeEvent) => void;
    swipeCancel: (event: SwipeEvent) => void;
    swipeEnd: (event: SwipeEvent) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    asChild: {
        type: import("vue").PropType<boolean>;
    };
    as: {
        type: import("vue").PropType<import('../Primitive').AsTag>;
        default: string;
    };
    type: {
        type: import("vue").PropType<"background" | "foreground">;
    };
    open: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
    duration: {
        type: import("vue").PropType<number>;
    };
}>> & {
    onPause?: (() => any) | undefined;
    onEscapeKeyDown?: ((event: KeyboardEvent) => any) | undefined;
    onClose?: (() => any) | undefined;
    onResume?: (() => any) | undefined;
    onSwipeStart?: ((event: SwipeEvent) => any) | undefined;
    onSwipeMove?: ((event: SwipeEvent) => any) | undefined;
    onSwipeCancel?: ((event: SwipeEvent) => any) | undefined;
    onSwipeEnd?: ((event: SwipeEvent) => any) | undefined;
}, {
    as: import('../Primitive').AsTag;
    open: boolean;
}, {}>, {
    default?(_: {}): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
